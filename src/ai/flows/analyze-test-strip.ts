// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Analyzes an aquarium test strip image to determine water parameters.
 *
 * - analyzeTestStrip - A function that handles the analysis of the test strip image.
 * - AnalyzeTestStripInput - The input type for the analyzeTestStrip function.
 * - AnalyzeTestStripOutput - The return type for the analyzeTestStrip function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeTestStripInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of an aquarium test strip, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type AnalyzeTestStripInput = z.infer<typeof AnalyzeTestStripInputSchema>;

const AnalyzeTestStripOutputSchema = z.object({
  waterParameters: z
    .string()
    .describe(
      'The detected water parameters based on the test strip image, including but not limited to: pH, Ammonia, Nitrite, Nitrate, General Hardness (GH), Carbonate Hardness (KH), Chlorine. Also include units of measurement.'
    ),
});
export type AnalyzeTestStripOutput = z.infer<typeof AnalyzeTestStripOutputSchema>;

export async function analyzeTestStrip(input: AnalyzeTestStripInput): Promise<AnalyzeTestStripOutput> {
  return analyzeTestStripFlow(input);
}

const analyzeTestStripPrompt = ai.definePrompt({
  name: 'analyzeTestStripPrompt',
  input: {schema: AnalyzeTestStripInputSchema},
  output: {schema: AnalyzeTestStripOutputSchema},
  prompt: `You are an expert aquarium water quality analyst.

You will analyze a photo of an aquarium test strip and determine the water parameters based on the colors of the test pads.

Analyze the following test strip image and determine the water parameters:

Test Strip Image: {{media url=photoDataUri}}

Provide the water parameters clearly and concisely, including the units of measurement for each parameter.`,
});

const analyzeTestStripFlow = ai.defineFlow(
  {
    name: 'analyzeTestStripFlow',
    inputSchema: AnalyzeTestStripInputSchema,
    outputSchema: AnalyzeTestStripOutputSchema,
  },
  async input => {
    const {output} = await analyzeTestStripPrompt(input);
    return output!;
  }
);
